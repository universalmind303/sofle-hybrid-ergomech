/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    behaviors {
        lh_pht: left_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47 11 54 55 56 57 58>;    // <---[[right-hand keys]]
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <190>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            label = "colemak";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&gresc                         &kp N1           &kp N2          &kp N3           &kp N4     &kp N5   &kp N6     &kp N7           &kp N8                 &kp N9       &kp N0        &kp DEL
&mt LC(LA(LSHIFT)) TAB         &lt 3 Q          &kp W           &lh_pht RCTRL F  &kp P      &kp G    &kp J      &kp L            &bhm RCTRL U           &kp Y        &kp SEMI      &kp GRAVE
&lh_pht LS(LA(LC(LGUI))) CAPS  &lh_pht LSHFT A  &lh_pht LALT R  &lh_pht LGUI S   &kp T      &kp D    &kp H      &kp N            &bhm RGUI E            &bhm RALT I  &bhm RSHFT O  &bhm LS(LA(LC(LGUI))) SQT
&kp LS(TAB)                    &kp Z            &kp X           &kp C            &kp V      &kp B    &kp K      &kp M            &kp COMMA              &kp DOT      &kp FSLH      &kp RET
&kp C_MUTE                     &kp LGUI         &kp LEFT_GUI    &lt 1 MINUS      &kp EQUAL  &kp RET  &kp SPACE  &lt 2 BACKSPACE  &sk LS(LA(LG(RCTRL)))  &kp RALT     &kp RGUI
                                                                                                     &kp ENTER  &kp RIGHT        &kp UP_ARROW           &kp LEFT     &kp DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_DN &inc_dec_kp PG_UP PG_UP>;
        };

        symbols_layer {
            label = "symbols";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans  &kp F1    &kp F2    &kp F3    &kp F4    &kp F5     &kp F6     &kp F7    &kp F8     &kp F9    &kp F10    &kp F11
&trans  &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp ASTRK  &kp PIPE  &kp COLON  &none
&none   &kp LPAR  &kp LBRC  &kp LBKT  &kp LT    &none      &kp SQT    &kp GT    &kp RBKT   &kp RBRC  &kp RPAR   &kp GRAVE
&trans  &kp RPAR  &kp RBRC  &kp RBKT  &kp GT    &none      &none      &none     &trans     &trans    &trans     &trans
&trans  &trans    &trans    &trans    &trans    &trans     &trans     &trans    &trans     &trans    &trans
                                                           &kp A      &kp B     &kp C      &kp D     &kp E
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        navigation_layer {
            label = "navigation";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&none   &none       &none      &kp C_PLAY_PAUSE  &kp C_PREV   &kp C_NEXT  &none     &none                 &none                     &none                      &none                  &none
&trans  &trans      &trans     &trans            &trans       &trans      &kp HOME  &kp LG(LEFT_BRACKET)  &kp LG(LS(LEFT_BRACKET))  &kp LG(LS(RIGHT_BRACKET))  &kp LG(RIGHT_BRACKET)  &trans
&trans  &kp LALT    &kp LCTRL  &kp LSHFT         &trans       &kp CLCK    &kp END   &kp LEFT              &kp DOWN                  &kp UP                     &kp RIGHT              &trans
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY        &kp K_PASTE  &trans      &kp HOME  &kp LG(LEFT)          &kp PG_DN                 &kp PG_UP                  &kp LG(RIGHT)          &kp END
&trans  &trans      &trans     &trans            &trans       &trans      &trans    &trans                &trans                    &trans                     &trans
                                                                          &kp A     &kp B                 &kp C                     &kp D                      &kp E
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF  &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none            &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &none  &none  &none  &none  &none  &none
&rgb_ug RGB_TOG    &none            &none            &none            &none            &none            &none  &none  &none  &none  &none
                                                                                                        &kp A  &kp B  &kp C  &kp D  &kp E
            >;
        };
    };
};
